name: Oracle Service Demo
on:
  workflow_call:
    inputs:
      tasks:
        required: true
        type: string
jobs:
  oracle-service:
    env:
      NGROK_TOKEN: 6UJmhcvUht49YHxEf1246_7oANfwQTyBrZEL3QT6yLN
    name: start oracle container
    runs-on: ubuntu-latest
    services:
      # Oracle service (label used to access the service container)
      oracle:
        # Docker Hub image (feel free to change the tag "latest" to any other available one)
        image: gvenzl/oracle-free:latest
        # Provide passwords and other environment variables to container
        env:
          ORACLE_PASSWORD: Oracle123
        # Forward Oracle port
        ports:
          - 1521:1521
        # Provide healthcheck script options for startup
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Install libaio1 (required for Oracle Instant Client)
        run: |
          sudo apt-get update
          wget http://archive.ubuntu.com/ubuntu/pool/main/liba/libaio/libaio1_0.3.112-5_amd64.deb
          sudo dpkg -i libaio1_0.3.112-5_amd64.deb

      - name: Set up Oracle Instant Client
        run: |
          wget https://download.oracle.com/otn_software/linux/instantclient/2360000/instantclient-basic-linux.x64-23.6.0.24.10.zip
          wget https://download.oracle.com/otn_software/linux/instantclient/2360000/instantclient-sqlplus-linux.x64-23.6.0.24.10.zip
          mkdir -p /opt/oracle/instantclient-basic
          mkdir -p /opt/oracle/instantclient-sqlplus
          unzip -q instantclient-basic-linux.x64-23.6.0.24.10.zip -d /opt/oracle/instantclient-basic
          unzip -q instantclient-sqlplus-linux.x64-23.6.0.24.10.zip -d /opt/oracle/instantclient-sqlplus          
          cp -rf /opt/oracle/instantclient-sqlplus/instantclient_23_6/* /opt/oracle/instantclient-basic/instantclient_23_6/

      - name: Set up environment variables
        run: |
          echo "PATH=/opt/oracle/instantclient-basic/instantclient_23_6:$PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/opt/oracle/instantclient-basic/instantclient_23_6:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "TNS_ADMIN=/opt/oracle/instantclient-basic/instantclient_23_6" >> $GITHUB_ENV

      - name: Verify sqlplus
        run: |
          sqlplus -v

      - name: Wait for Oracle DB to be ready
        run: |
          until echo "SELECT 1 FROM DUAL;" | sqlplus -S system/Oracle123@localhost:1521/FREEPDB1; do
            echo "Waiting for Oracle DB to be ready..."
            sleep 2
          done

#      - name: Install ngrok
#        run: |
#          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
#          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
#          sudo apt update && sudo apt install ngrok -y
#
#      - name: Start ngrok to expose Oracle
#        run: |
#          ngrok authtoken 6UJmhcvUht49YHxEf1246_7oANfwQTyBrZEL3QT6yLN
#          #ngrok tcp --remote-addr=1.tcp.ngrok.io:15211 1521
#          ngrok tcp 1521 &
#          sleep 5  # Allow ngrok to initialize

      - name: Start Ngrok
        uses: vmactions/ngrok-tunnel@v0.0.1
        with:
          port: 1521                                   # 本地服务端口
          protocol: tcp                                  # 隧道协议

      - name: Fetch ngrok public URL
        run: curl -s http://127.0.0.1:4040/api/tunnels
      - name: Get Ngrok Public IP and Port
        id: parse-ngrok
        run: |
          NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[] | select(.proto=="tcp") | .public_url')
          IP=$(echo $NGROK_URL | awk -F[/:] '{print $4}')
          PORT=$(echo $NGROK_URL | awk -F[/:] '{print $5}')
          echo "::set-output name=ip::$IP"
          echo "::set-output name=port::$PORT"

      - name: Display Ngrok Details
        run: |
          echo "Ngrok Public IP: ${{ steps.parse-ngrok.outputs.ip }}"
          echo "Ngrok Public Port: ${{ steps.parse-ngrok.outputs.port }}"


  tasks:
    runs-on: ubuntu-latest
    needs: oracle-service
    steps:
      - name: Run dependent tasks
        run: | 
          echo "Running tasks: ${{ inputs.tasks }}"